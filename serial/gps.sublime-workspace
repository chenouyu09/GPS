{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"close",
				"close(int __fd)	int"
			],
			[
				"lat",
				"lati_second	double"
			],
			[
				"lati",
				"lati_minute	int"
			],
			[
				"la",
				"lati_degree	int"
			],
			[
				"lo",
				"long_second	double"
			],
			[
				"long",
				"long_minute	int"
			],
			[
				"opti",
				"options	struct termios"
			],
			[
				"n",
				"number	int"
			],
			[
				"printGPGGA",
				"printGPGGA()	int"
			],
			[
				"file",
				"file_path"
			],
			[
				"GP",
				"GPIO_Pin	uint16_t"
			],
			[
				"cfg",
				"cfg(int fd, const char *buf)	int"
			],
			[
				"cfgcs",
				"cfg_rst_cs_start	const char []"
			],
			[
				"r",
				"rename(const char *__old, const char *__new)	int"
			],
			[
				"cfg_rate",
				"cfg_rate_2000	const char []"
			],
			[
				"gpgga",
				"gpgga_data	struct"
			],
			[
				"gpgg",
				"gpgga_data	struct"
			],
			[
				"Ublox",
				"Ublox_Cfg_Ack_Check	u_int8_t"
			],
			[
				"read",
				"read(int __fd, void *__buf, size_t __nbytes)	ssize_t"
			],
			[
				"uint",
				"u_int16_t	typedef"
			],
			[
				"no",
				"nomsg	char"
			],
			[
				"tq2",
				"tq2440_serial1"
			],
			[
				"pri",
				"printf	printf …"
			],
			[
				"l",
				"long_minute	int"
			],
			[
				"gp",
				"gprmc	struct gprmc_data"
			],
			[
				"lt",
				"lati_minute	int"
			],
			[
				"st",
				"status	char"
			],
			[
				"open",
				"open(const char *__file, int __oflag, ...)	int"
			],
			[
				"re",
				"receive_buf	char [2048]"
			],
			[
				"rev",
				"rev_test	int"
			],
			[
				"tv",
				"tv_usec	__suseconds_t"
			],
			[
				"open_seria",
				"open_serial(int fd)	int"
			],
			[
				"B9",
				"B9600	macro"
			],
			[
				"O_NO",
				"O_NONBLOCK	macro"
			],
			[
				"O_RD",
				"O_RDWR	macro"
			],
			[
				"MEM",
				"MEMDEV_SIZE	macro"
			],
			[
				"MEMDEV",
				"MEMDEV_SIZE	macro"
			],
			[
				"mem_",
				"mem_devp	struct mem_dev *"
			],
			[
				"ENoD",
				"ENODEV	macro"
			],
			[
				"mem",
				"mem_major	int"
			],
			[
				"i",
				"if	If Condition"
			],
			[
				"s",
				"setGas(int mGas)	void"
			],
			[
				"b",
				"bCat"
			],
			[
				"get",
				"getAge"
			],
			[
				"set",
				"setAge"
			],
			[
				"ma",
				"mCat"
			],
			[
				"m",
				"mNumber"
			],
			[
				"print",
				"printnumber"
			]
		]
	},
	"buffers":
	[
		{
			"file": "test.c",
			"settings":
			{
				"buffer_size": 2801,
				"line_ending": "Unix"
			}
		},
		{
			"file": "gprs.h",
			"settings":
			{
				"buffer_size": 98,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include <termios.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <fcntl.h>\n#include <string.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n\n//#include \"serial.h\"\n#include \"gps.h\"\n\n/*unicode 0106¦000100”750100·370106¦010106¥990106¥950106¥900106§820„30†9010¡ë00106¥95010¡ë30„30†8¡§0„90106¦080106¥96*/\nstatic const char *num_unicode[10]={\n    \"0030\",/*0*/\n    \"0031\",/*1*/\n    \"0032\",/*2*/\n    \"0033\",/*3*/\n    \"0034\",/*4*/\n    \"0035\",/*5*/\n    \"0036\",/*6*/\n    \"0037\",/*7*/\n    \"0038\",/*8*/\n    \"0039\",/*9*/\n};\n\n//0106¥95010¡­0int0100·340100·310106¦080106§850106¥96010¡ë60100·370106¦01unicode0106¦000100”750„30†8¡§0„90106¦080106¥96010¡­50106¥74010¡­70100”73010¡­80106¥95ch0106¦080106§850„30†9¡§0„7\nvoid int2unico(int num, char ch[])\n{\n	int n,n1,n2,n3,n4;\n	if(num<100)\n	{\n		n1=num/10;\n		n2=num%10;\n		if (n1 > 0)\n		{\n			strcat(ch,num_unicode[n1]);\n			strcat(ch,num_unicode[n2]);\n		}\n		else if (n1 == 0)\n		{\n			strcat(ch,num_unicode[n2]);\n		}\n		printf(\"ch1=%s\\n\",ch);\n		//*ch[1]=*num_unicode[n2];\n	}\n	else if(2000<num<10000)\n	{\n		n1=num/1000;\n		n  =num%1000;\n		n2=n/100;\n		n  =n%100;\n		n3=n/10;\n		n4=n%10;\n		if(n1>=1)\n		 strcat(ch,num_unicode[n1]);\n		strcat(ch,num_unicode[n2]);\n		strcat(ch,num_unicode[n3]);\n		strcat(ch,num_unicode[n4]);\n		printf(\"ch2=%s\\n\",ch);\n		//*ch[1]=*num_unicode[n2];\n	}\n	\n}\n\n//0106¥95010¡­0double0100·340100·310106¦080106§850106¥96010¡ë60100·370106¦01unicode0106¦000100”750„30†8¡§0„90106¦080106¥96010¡­50106¥74010¡­70100”73010¡­80106¥95ch0106¦080106§850„30†9¡§0„7\nvoid doub2unico(double db,char ch[])\n{\n	int i1,i2;\n	//char *dian=\"002E\";//0100·340106¥730106¦080106§85010¡­80100”70\n	double db1;\n	i1=db;\n	db1=db-i1;\n	int2unico(i1,ch);\n\n	if (db1 < 0.1)\n	{\n		strcat(ch,\"002E\");\n		strcat(ch,\"0030\");\n	}\n	else if (db1 >= 0.1)\n	{\n		strcat(ch,\"002E\");\n	}\n	i2=db1*1000;\n	int2unico(i2,ch);\n}\n\n//y0106¦02¡§0†2m0100·380106¦00d0106¦060100·39\nvoid y_m_d(int y,int m,int d,char ch[])\n{\n	/*0106¦02¡§0†20100·380106¦000106¦060100·39        5E74 6708 65E5  */\n	//char *douhao=\"002C\";//010¡­90106¥920106¥920106¦03\n	int2unico(y,ch);\n	strcat(ch,\"5E74\");\n	int2unico(m,ch);\n	strcat(ch,\"6708\");\n	int2unico(d,ch);\n	strcat(ch,\"65E5\");\n	//strcat(ch,douhao);\n}\n\n//s0106¦080„30†8f0„3¡è010¡ë0m0106¦010100”75\nvoid s_f_m(int s,int f,int m,char ch[])\n{\n	/*4.0106¦080„30†80„3¡è010¡ë00106¦010100”75        65F6 5206 79D2*/\n	//char *douhao=\"002C\";//010¡­90106¥920106¥920106¦03\n	int2unico(s,ch);\n	strcat(ch,\"65F6\");\n	int2unico(f,ch);\n	strcat(ch,\"5206\");\n	int2unico(m,ch);\n	strcat(ch,\"79D2\");\n	//strcat(ch,douhao);\n}\n\n//(010¡­9010¡­00100·320„30‡0)0106¥96010¡­2d0106¥730100”70f '   m\"\nvoid jingdu(char c,int d,int f,double m,char ch[])\n{\n	/*1.0106¥96010¡­27ECF */\n	//char *s=\"7ECF\";\n	//char *douhao=\"002C\";//010¡­90106¥920106¥920106¦03\n	//char *s1[2]={\"4E1C\",\"897F\"};//010¡­9010¡­00100·320„30‡0\n	if(c=='E')\n		//strcat(ch,s1[0]);//010¡­9010¡­0\n		strcat(ch,\"4E1C\");//010¡­9010¡­0\n	else if(c=='W')\n		//strcat(ch,s1[1]);//0100·320„30‡0\n		strcat(ch,\"897F\");//010¡­9010¡­0\n	else if(c=='W')\n	strcat(ch,\"7ECF\");\n	//strcat(ch,s);\n	int2unico(d,ch);\n	strcat(ch,\"00B0\");\n	int2unico(f,ch);\n	strcat(ch,\"0027\");\n	doub2unico(m,ch);\n	strcat(ch,\"0020\");\n	//strcat(ch,douhao);\n}\n\n//(0106¦020100·330„30†80„30†8)0100·32010¡­6d0106¥730100”70f '   m\"\nvoid weidu(char c,int d,int f,double m,char ch[])\n{\n	/*1.0100·32010¡­67EAC */\n	char *s=\"7EAC\";\n	//char *douhao=\"002C\";//010¡­90106¥920106¥920106¦03\n	char *s1[2]={\"5357\",\"5317\"};//0106¦020100·330„30†80„30†8\n	if(c=='S')\n		strcat(ch,s1[0]);//0106¦020100·33\n	else if(c=='N')\n		strcat(ch,s1[1]);//0„30†80„30†8\n	strcat(ch,s);\n	int2unico(d,ch);\n	strcat(ch,\"00B0\");//0106¥730100”70\n	int2unico(f,ch);\n	strcat(ch,\"0027\");// '\n	doub2unico(m,ch);\n	strcat(ch,\"0020\");//\"\n	//strcat(ch,douhao);\n}\n\n//0106¦09010¡ë2010¡­90106¦06spe    km/h\nvoid sudu(double spe,char ch[])\n{\n	/*0106¦09010¡ë2010¡­90106¦06901F  5EA6 */\n	char *s=\"901F5EA6\";\n	/* km/h     006B006D002F0068*/\n	char *s1=\"006B006D002F0068\";\n	//char *douhao=\"002C\";//010¡­90106¥920106¥920106¦03\n	strcat(ch,s);\n	doub2unico(spe,ch);\n	strcat(ch,s1);\n	//strcat(ch,douhao);\n	\n}\n\n//gps0100·38010¡ë30106¥910„3¨¨0„30†90„30‡0\nvoid gps_is_on(char ch[])\n{\n	/*gps0100·38010¡ë30106¥910„3¨¨0„30†90„30‡000670070007357285DE54F5C*/\n	char *s=\"00670070007357285DE54F5C\";\n	char *douhao=\"002C\";//010¡­90106¥920106¥920106¦03\n	strcat(ch,s);\n	strcat(ch,douhao);\n}\n\n//gps010¡­50106¥930100·38010¡ë30106¥910„3¨¨0„30†90„30‡0\nvoid gps_is_off(char ch[])\n{\n	/*gps010¡­50106¥930100·38010¡ë30106¥910„3¨¨0„30†90„30‡00067007000734E0D57285DE54F5C*/\n	char *s=\"0067007000734E0D57285DE54F5C\";\n	char *douhao=\"002C\";//010¡­90106¥920106¥920106¦03\n	strcat(ch,s);\n	strcat(ch,douhao);\n}\nvoid send_at(int fd)\n{\n	int nread,nwrite;\n	char buff[128]; \n   	 char reply[128];\n	memset(buff,0,sizeof(buff)); \n	strcpy(buff,\"at\\r\"); \n	nwrite = write(fd,buff,strlen(buff)); \n	printf(\"nwrite=%d,%s\\n\",nwrite,buff); \n	memset(reply,0,sizeof(reply)); \n	sleep(1); \n	nread = read(fd,reply,sizeof(nwrite));\n	 printf(\"nread=%d,%s\\n\",nread,reply); \n}\n\n\nvoid send_at_cmgf(int fd,char *c)\n{\n	int nread,nwrite;\n	char buff[128]; \n   	 char reply[128];\n	memset(buff,0,sizeof(buff)); \n	 strcpy(buff,\"AT+CMGF=\");\n                                  \n        strcat(buff,c);  //char *strcat(char *dest, const char *src)\n                                       //0100·370106¦010100·37010¡ë30106¥95010¡­0src0106¦09¡§0…7010¡ë00106¥900100·33¡§¡ã010¡­80106¦020„30†9010¡ë00„3¡è0106§84010¡­7010¡­30106¥970106¥950„30†8010¡­7010¡­80106¥95\n                                       //dest0106¦09¡§0…7010¡ë00106¥900100·33¡§¡ã0„30†9010¡ë00„3¡è0106§84010¡­7010¡­30106¦020106¥780100·32010¡­5\n	 strcat(buff,\"\\r\"); \n	 nwrite = write(fd,buff,strlen(buff));\n	 printf(\"nwrite=%d,%s\\n\",nwrite,buff);\n	 memset(reply,0,sizeof(reply)); \n	 sleep(1);\n	 nread = read(fd,reply,sizeof(reply));\n	 printf(\"nread=%d,%s\\n\",nread,reply);\n}\n\nvoid send_at_cscs_ucs2(int fd)\n{\n	int nread,nwrite; \n	char buff[128];\n	char reply[128];\n	memset(buff,0,sizeof(buff)); \n	strcpy(buff,\"AT+CSCS=\\\"UCS2\\\"\");                         \n	 strcat(buff,\"\\r\"); \n	 nwrite = write(fd,buff,strlen(buff));\n	 printf(\"nwrite=%d,%s\\n\",nwrite,buff);\n	 memset(reply,0,sizeof(reply)); \n	 sleep(1);\n	 nread = read(fd,reply,sizeof(reply));\n	 printf(\"nread=%d,%s\\n\",nread,reply);\n}\n\nvoid send_at_csca(int fd)\n{\n	int nread,nwrite; \n	char buff[128];\n	char reply[128];\n	memset(buff,0,sizeof(buff)); \n	strcpy(buff,\"AT+CSCA=\\\"+8613800200500\\\",145\");                         \n	 strcat(buff,\"\\r\"); \n	 nwrite = write(fd,buff,strlen(buff));\n	 printf(\"nwrite=%d,%s\\n\",nwrite,buff);\n	 memset(reply,0,sizeof(reply)); \n	 sleep(1);\n	 nread = read(fd,reply,sizeof(reply));\n	 printf(\"nread=%d,%s\\n\",nread,reply);\n}\n\nvoid send_at_cmgs(int fd,char *cmgs,char *message)\n{\n	int nread,nwrite; \n	char buff[20000]; \n   	char reply[20000];\n	memset(buff,0,sizeof(buff));\n	 strcpy(buff,\"AT+CMGS=\");\n	strcat(buff,cmgs);\n	 strcat(buff,\"\\r\");\n	 nwrite = write(fd,buff,strlen(buff));\n	 printf(\"nwrite=%d,%s\\n\",nwrite,buff);\n	 memset(reply,0,sizeof(reply)); \n	 sleep(1); \n	 nread = read(fd,reply,sizeof(reply));\n	  printf(\"nread=%d,%s\\n\",nread,reply); \n	  memset(buff,0,sizeof(buff));\n	  strcpy(buff,message);\n	  nwrite = write(fd,buff,strlen(buff));\n	  printf(\"nwrite=%d,%s\\n\",nwrite,buff);\n	  memset(reply,0,sizeof(reply));\n	  sleep(1);\n	  nread = read(fd,reply,sizeof(reply));\n	  printf(\"nread=%d,%s\\n\",nread,reply);\n\n}\n\nint receive_en_message(int fd)\n{ \n   	 int nread,nwrite;\n	 char cmgf[]     = \"1\";\n   	 char buff[128]; \n   	 char reply[128]; \n	 char *addr;\n   	 send_at( fd);//at\n   		\n	 send_at_cmgf(fd,cmgf);//AT+CMGF=1\n        memset(buff,0,sizeof(buff));\n	 strcpy(buff,\"AT+CMGR=1\");//010¡­90106¥990106¦060106¥730106¦09¡§0…70100·370100·340100·340106¦030100·330106¥74\n	                                          \n	 strcat(buff,\"\\r\");   //0100·33¡§¡è010¡­80„30†80100·37010¡ë30„30Š0010¡­70106¥990106¦090106¥93010¡ë1010¡­6010¡­8\n	 nwrite = write(fd,buff,strlen(buff));\n	 printf(\"nwrite=%d,%s\\n\",nwrite,buff);\n	 memset(reply,0,sizeof(reply));\n	 sleep(1);\n	 nread = read(fd,reply,sizeof(reply));\n	if(reply[23]=='U')\n	       addr=&reply[103];\n	else if(reply[23]=='R')\n		addr=&reply[101];\n	\n	 printf(\"nread=%d,%s\\n\",nread,addr);\n	 \n  \n	return 0;\n}\nint send_zh_message(int fd) \n{\n	char cmgf[]     = \"0\";\n	 char cmgs[4]  = {'\\0'}; \n	 char final[20000]={'\\0'};\n	 char tmp[20000]={'\\0'};\n	 int len1,len2; \n	 char ch_c1[3]={'\\0'};\n	 \n	//y_m_d(2014,4,26,tmp);\n	y_m_d(gprmc.year,gprmc.month,gprmc.day,tmp);\n	//s_f_m(21,31,50,tmp);\n	s_f_m(gprmc.hour,gprmc.minute,gprmc.second,tmp);\n	gps_is_on(tmp);\n	//jingdu('E',100,45,25.4587,tmp);\n	jingdu(gprmc.e,gprmc.long_degree,gprmc.long_minute,gprmc.long_second,tmp);\n	//weidu('N',87,47,45.7545,tmp);\n	weidu(gprmc.n,gprmc.lati_degree,gprmc.lati_minute,gprmc.lati_second,tmp);\n	//sudu(45,tmp);\n	sudu(gprmc.kmph,tmp);\n	printf(\"tmp=%s\\n\",tmp);\n	len2=(strlen(tmp))/2;\n	printf(\"strlen(tmp)is %d\\n\",len2);\n	len1 = 15+len2;\n	printf(\"\\n\");\n	\n	ch_c1[0] = len2/16 + '0';\n	ch_c1[1] = len2%16 + '0';\n	ch_c1[2] = 0;\n	//0100·340106¦030100·330106¥74010¡­60„3¨¨010¡­90106¦060100·370106¦010106¥990106¥950100·320106¥930106¦080106§850„30†8¡§0„90106¦080106¥960106¥75010¡­10106¥900106§820106¦080106§85010¡­80106¦02010¡­50106¥910010¡­70100·390106¥910106¥930106¥990106¥950100·320106¥930106¦080106§85\n	 if(ch_c1[1]<1) \n	 {\n		//3135936713F5\n		strcat(final,\"0011000D91683135936713F50008010\");//010¡­50106¥910(10106¥92¡§0…30106¦010100”73010¡­80106¦020)\n	  }\n	 else\n	 	strcat(final,\"0011000D91683135936713F5000801\");//010¡­50106¥93010¡­50106¥910106¥990100”70\n	strcat(final,ch_c1);\n	 printf(\"ch_c1 = %s\\n\", ch_c1);\n	strcat(final,tmp);\n	printf(\"final = %s\\n\", final);\n	 strcat(final,\"\\x1A\");\n	 sprintf(cmgs,\"%d\",len1);//0106¥95010¡­0len0100·34010¡­7010¡­80106¥95cmgs0106¥980100”77\n	 send_at(fd);\n	 send_at_cmgf(fd,cmgf);\n	 send_at_cscs_ucs2(fd);\n	 send_at_csca(fd);\n	 send_at_cmgs(fd,cmgs,final);\n	 printf(\"\\n\");\n	 return 0;\n}\n\nint serial_init(int fd) \n{ \n	   struct termios options; \n          if(tcgetattr(fd,&options)==-1)\n          {\n                return -1;\n	   }\n		cfmakeraw(&options);//0106¥95010¡­0010¡ë00100·39010¡­90106¦090106¦07¡§¡§010¡ë00106¦010100·320106¥790100·38010¡­20106¦080106¥940106¦020106¥750106¦080106¥95\n	   options.c_cflag |= ( CLOCAL | CREAD ); \n	   options.c_cflag &= ~CSIZE; \n	   options.c_cflag &= ~CRTSCTS; \n	   options.c_cflag |=  CS8; \n	   options.c_cflag &= ~CSTOPB; \n	   options.c_iflag |= IGNPAR; \n	   options.c_oflag = 0; \n	   options.c_lflag = 0; \n	   cfsetispeed  (&options, B9600); \n	   cfsetospeed (&options, B9600);\n	   if(tcsetattr(fd,TCSANOW,&options)==-1)\n	   	return -1;\n	   return 0;\n}\n\nint openGPRS(char *dev)\n{\n	int fd;\n	fd = open(dev, O_RDWR|O_NOCTTY|O_NDELAY);\n	if (-1 == fd)\n	{ \n		perror(\"Can't Open Serial Port\"); \n	}\n        //printf(\"fd=%d\\n\",fd1);\n	if(serial_init(fd)==-1)\n	{\n			perror(\"serial error\\n\");\n			return -1;\n	}\n	return fd;\n}\n\nint closeGPRS(int fd)\n{\n	int flag_close;\n	flag_close = close(fd);\n	if (flag_close == -1)\n	{\n		printf(\"Close the file failed!\\n\");\n	}\n	return 0;\n\n}\n\n#if 0\nint main() \n{ \n	int fd1; \n	char choice;\n	fd1 = open( \"/dev/tq2440_serial1\", O_RDWR|O_NOCTTY|O_NDELAY);\n	//fd2 = openGPS(\"/dev/tq2440_serial1\");\n	//0ˆ60ˆ80…90†90ˆ40…70ˆ40ˆ20‡80†50…7¨°0†70„9\n       //O_NOCTTY:0‡80†10ˆ70‡1¡À0†60…50ˆ20‡80‹50‡8¡À0„50…10‡60‹00ˆ20‡20†40‹60ˆ20„90‰00ˆ90…90‡90„50…10‡20‡50‡10…70†00‡10‰00ˆ90…90‡9\n       //0…50†30†3¨¢0…60‡70ˆ20„90…8¡Â0ˆ70‡1open()0…80‡20‡20‡50†00‹20†50‹30…60ˆ00…80‡20†70‰10‰00‡40‰00ˆ90…90‡9\n	if (-1 == fd1)\n	{ \n		perror(\"Can't Open Serial Port\"); \n	}\n	//send_at_cnmi_2_1(fd);\n        printf(\"fd1=%d\\n\",fd1);\n	if(serial_init(fd1)==-1)\n	{\n			perror(\"serial error\\n\");\n			return 1;\n	}\n	while(1)\n	{\n		printf(\"enter your selete :              \\n\");\n		printf(\"1.send      chinese message.\\n\");\n		printf(\"2.receive  english  message.\\n\");\n		printf(\"3.exit.                                  \\n\");\n	\n		choice = getchar();\n		switch(choice)\n		{\n			case '1': send_zh_message(fd1);\n			break;\n			case '2': receive_en_message(fd1);\n			break;\n			case '3':break;\n			default :break;\n		}\n		//while(1) {\n		\n		//readGPS(fd2);\n		//printf(\"=================================================================================\\n\");\n		//printCommand();\n		//printData();\n		//sleep(1);\n\n		//fflush(stdout);//¨¦¡­0‚30Š20‚60·3QT0Š10†50†70Š4¡±¡§0Š70†40“30Š20†2¡±¨¨0…40„60Š30¹00…40Š30†0¡­¨¦6¾4¡è0Š40†4¡°0Š26¥90…50Š20“30†20Š20‚6¡ì0Š70†40“3¨¨0†76¾40Š30„2¡¤0Š3¡ë0‚30Š20‚50…40Š10†30„60Š30…20„50Š20†00†0¨¨0†6¡°0Š26¦00†20Š0¢ã\n	//}\n		\n	}\n	close(fd1);\n	//closeGPS(fd2);\n	return 0;\n}\n#endif\n\n",
			"file": "gprs.c",
			"file_size": 18826,
			"file_write_time": 1398611322000000,
			"settings":
			{
				"buffer_size": 13463,
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 252,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/make.sublime-build",
	"command_palette":
	{
		"height": 327.0,
		"selected_items":
		[
			[
				"utf",
				"ConvertToUTF8: Reload with Encoding"
			],
			[
				"utf8",
				"ConvertToUTF8: Reload with Encoding"
			],
			[
				"uti",
				"ConvertToUTF8: Reload with Encoding"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"mdp",
				"Markdown Preview: Python Markdown: Export HTML in Sublime Text"
			],
			[
				"md",
				"Markdown Preview: Python Markdown: Preview in Browser"
			],
			[
				"m",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"sento",
				"Send to evernote"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				":w",
				":w - Save"
			],
			[
				"packagere",
				"Package Control: Remove Package"
			],
			[
				"git st",
				"Git: Show Tags"
			],
			[
				"git statu",
				"Git: Status"
			],
			[
				"git lg",
				"Git: Log All"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"gits",
				"Git: Status"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"inp",
				"InputHelper"
			],
			[
				"inpu",
				"InputHelper"
			],
			[
				"pacak",
				"Package Control: Enable Package"
			],
			[
				"u",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"ctags",
				"CTags: Show Symbols (file)"
			],
			[
				"",
				":$ - EOF"
			],
			[
				"sublime",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Snippet: ",
				"Snippet: #include <…>"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 647.0
	},
	"console":
	{
		"height": 230.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/ming/Project/kernel_module/tq2440/GPS/serial/serial.c",
		"/home/ming/Project/kernel_module/tq2440/GPS/serial/gps.h",
		"/home/ming/Project/kernel_module/tq2440/GPS/serial/gps.c",
		"/home/ming/Project/kernel_module/tq2440/GPS/serial/gprs3.c",
		"/home/ming/Project/kernel_module/tq2440/GPS/serial/gprs2.c",
		"/home/ming/Project/kernel_module/tq2440/GPS/serial/gprs.c",
		"/home/ming/Project/kernel_module/tq2440/GPS/serial/gps.sublime-project",
		"/home/ming/Project/stm32/src/main.c",
		"/home/ming/Project/stm32/src/Makefile",
		"/home/ming/Project/stm32/libs/STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h",
		"/home/ming/Project/stm32/src/startup.c",
		"/home/ming/Project/stm32/src/main_bk.c",
		"/home/ming/Project/stm32/libs/STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h",
		"/home/ming/Project/stm32/main.c",
		"/home/ming/Project/stm32/stm32.sublime-project",
		"/home/ming/.config/sublime-text-2/Packages/User/stm32_make.sublime-build",
		"/home/ming/Project/stm32/libs/STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h",
		"/home/ming/Project/stm32/libs/Makefile",
		"/home/ming/Project/stm32/libs/STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c",
		"/home/ming/.config/sublime-text-2/Packages/SublimeClang/SublimeClang.sublime-settings",
		"/home/ming/.config/sublime-text-2/Packages/User/make.sublime-build",
		"/home/ming/Project/sublime/first.sublime-project",
		"/home/ming/Project/stm32/src/hw_config.h",
		"/home/ming/Project/stm32/src/hw_config.c",
		"/home/ming/XP/Program/STM8/digital_source/lcd1602.c.dump",
		"/home/ming/XP/Program/STM8/digital_source/main.c.dump",
		"/home/ming/XP/Program/STM8/digital_source/lcd1602.c",
		"/home/ming/XP/Program/STM8/digital_source/main.c",
		"/home/ming/Project/kernel_module/tq2440/GPS/serial/test.c",
		"/home/ming/XP/Program/STM8/Voltmeter/digtal_tube.c.dump",
		"/home/ming/XP/Program/STM8/Voltmeter/adc.c.dump",
		"/home/ming/XP/Program/STM8/Voltmeter/main.c.dump",
		"/home/ming/XP/Program/STM8/Voltmeter/digtal_tube.c",
		"/home/ming/XP/Program/STM8/Voltmeter/adc.c",
		"/home/ming/XP/Program/STM8/Voltmeter/main.c",
		"/home/ming/Project/kernel_module/tq2440/GPS/serial/serial.h",
		"/home/ming/Desktop/hello.md",
		"/home/ming/Project/Kile_project/My_Note/account.tex",
		"/home/ming/Project/kernel_module/tq2440/GPS/README.md",
		"/home/ming/.config/sublime-text-2/Packages/User/SublimeEvernote.sublime-settings",
		"/home/ming/Project/Kile_project/My_Note/note.tex",
		"/home/ming/Project/Kile_project/My_Note/ubuntu.tex",
		"/home/ming/Project/Kile_project/My_Note/other.tex",
		"/home/ming/Project/Kile_project/My_Note/latex.tex",
		"/home/ming/.config/sublime-text-2/Packages/User/LaTeXTools.sublime-settings",
		"/home/ming/Project/Kile_project/My_Note/preamble.tex",
		"/home/ming/Project/Kile_project/My_Note/raspberrypi.tex",
		"/home/ming/.config/sublime-text-2/Packages/LaTeXTools/README.markdown",
		"/home/ming/.config/sublime-text-2/Packages/User/SublimeClang.sublime-settings",
		"/home/ming/.config/sublime-text-2/Packages/CTags/CTags.sublime-settings",
		"/home/ming/Desktop/pi/spy.py",
		"/usr/lib/python2.7/os.py",
		"/home/ming/Project/kernel_module/tq2440/GPS/serial/test.sh",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/GPS/serial/gps.h",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/GPS/serial/gps.c",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/2.serial/test.c",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/2.serial/gps.h",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/2.serial/gps.c",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/2.serial/serial.h",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/2.serial/serial.c",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/2.serial/Makefile",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/HARDWARE/GPS/gps.c.dump",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/USER/test.c.dump",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/HARDWARE/GPS/gps.c",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/USER/test.c",
		"/home/ming/1",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/2.serial/tmp.c",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/2.serial/text.txt",
		"/home/ming/Document/毕业设计/写应用/参考程序/Serial_Test/serial_test.c",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/HARDWARE/GPS/gps.h.dump",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/USMART/usmart.h.dump",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/USMART/usmart.c.dump",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/HARDWARE/USART2/usart2.c.dump",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/HARDWARE/USART2/usart2.c",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/HARDWARE/USART2/usart2.h.dump",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/HARDWARE/USART2/usart2.h",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/HARDWARE/GPS/gps.h",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/USMART/usmart.c",
		"/home/ming/Document/毕业设计/写应用/参考程序/stm32gps/USMART/usmart.h",
		"/home/ming/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-keymap",
		"/home/ming/.config/sublime-text-2/Packages/User/Default (Linux).sublime-keymap",
		"/home/ming/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/USER/test.c.dump",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/HARDWARE/GPS/gps.h.dump",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/HARDWARE/GPS/gps.c.dump",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/2.serial/QT/GPS/main.cpp",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/2.serial/b.txt",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/HARDWARE/GPS/gps.h",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/USER/test.c",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/HARDWARE/GPS/gps.c",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/HARDWARE/USART2/usart2.c.dump",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/HARDWARE/USART2/usart2.c",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/USMART/usmart.c.dump",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/USMART/usmart_config.c.dump",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/USMART/usmart.c",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/USMART/usmart_config.c",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/HARDWARE/LCD/ILI93xx.c.dump",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/HARDWARE/LCD/ILI93xx.c",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/USMART/usmart_str.c.dump",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ALIENTEK MINISTM32/USMART/usmart_str.c",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ATK新版/ATK-NEO-6M -V2.3版本GPS模块/2，程序源码/ALIENTEK MINISTM32 扩展实验23 ATK-NEO-6M GPS模块实验(适合Mini板)/USER/test.c.dump",
		"/home/ming/Document/毕业设计/GPS/stm32_GPS/ATK新版/ATK-NEO-6M -V2.3版本GPS模块/2，程序源码/ALIENTEK MINISTM32 扩展实验23 ATK-NEO-6M GPS模块实验(适合Mini板)/USER/test.c",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/1.open/open.c",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/2.serial/serial_pc.c",
		"/home/ming/src/kernel/linux-2.6.30.4_20100531/arch/cris/include/asm/termbits.h",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/1.open/b",
		"/home/ming/KuaiPan/Project/kernel_module/tq2440/1.open/a.txt",
		"/home/ming/src/qt/qt4.8.5/qt-everywhere-opensource-src-4.8.5/src/gui/embedded/qscreen_qws.cpp",
		"/home/ming/XP/Program/tmp/src/stdafx.cpp.dump",
		"/home/ming/src/qt/qt4.5.0/qt-embedded-linux-opensource-src-4.5.0/src/gui/embedded/qmousetslib_qws.cpp",
		"/home/ming/src/qt/qt4.8.5/qt-everywhere-opensource-src-4.8.5/src/gui/embedded/qmouseqnx_qws.cpp",
		"/home/ming/src/kernel/linux-2.6.30.4_20100531/drivers/serial/s3c2440.c",
		"/home/ming/src/kernel/linux-2.6.30.4_20100531/drivers/serial/samsung.c",
		"/home/ming/src/kernel/linux-2.6.30.4/drivers/serial/s3c2440.c",
		"/home/ming/src/kernel/linux-2.6.30.4/drivers/serial/samsung.c",
		"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/drivers/serial/s3c2440.c",
		"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/drivers/serial/samsung.c",
		"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/include/linux/console.h",
		"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/drivers/scsi/qla2xxx/qla_def.h",
		"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/drivers/serial/crisv10.c",
		"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/arch/arm/include/asm/termbits.h",
		"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/drivers/s390/char/sclp_con.c",
		"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/arch/alpha/include/asm/termbits.h",
		"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/drivers/serial/serial_core.c",
		"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/drivers/atm/horizon.c",
		"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/arch/arm/plat-s3c/include/plat/regs-serial.h",
		"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/drivers/serial/samsung.h",
		"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/drivers/base/platform.c"
	],
	"find":
	{
		"height": 44.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/home/ming/src/kernel/linux-2.6.30.4_20100531",
			"/home/ming/src/qt/qt4.8.5/qt-everywhere-opensource-src-4.8.5/src",
			"/home/ming/src/qt/qt4.5.0/qt-embedded-linux-opensource-src-4.5.0/src",
			"/home/ming/src/qt/qt4.8.5/qt-everywhere-opensource-src-4.8.5/src",
			"/home/ming/src/qt/qt4.5.0/qt-embedded-linux-opensource-src-4.5.0/src",
			"/home/ming/src/qt/qt4.5.0/qt-embedded-linux-opensource-src-4.5.0/src/gui/inputmethod",
			"/home/ming/src/kernel/linux-2.6.30.4_20100531/drivers/serial",
			"/home/ming/src/kernel/linux-2.6.30.4/drivers/serial",
			"/home/ming/src/kernel/linux-2.6.30.4",
			"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440",
			"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/drivers/serial",
			"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440",
			"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/drivers/serial",
			"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440",
			"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/drivers/serial",
			"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440",
			"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440/drivers/serial",
			"/home/ming/src/kernel/linux-2.6.32.rc8.mini2440"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"comma >",
			"h",
			"lcd_string",
			"home/ming/Ming_project/",
			"printGPS",
			"printf",
			"switch",
			"PRINT_COMMAND",
			"getchecksum",
			"NMEA_GPVTG_Analysis",
			"校验",
			"校验和",
			"sum",
			"check",
			"save",
			"prt",
			"r_buf",
			"pGPTXT",
			"GPVTG",
			"gpvtg_data",
			"GPGGA",
			"GPRMC",
			"gpgga_data",
			"pgpgga",
			"pgpgsa",
			"pgpgll",
			"pgpgsa",
			"readGPS",
			"b5",
			"b562 0501 0200 0608 3139 3234 2e30 302c\n562c 2c2c 2c2c 2c2c 3131 3034 3134 2c2c\n2c4e 2a37 340a 0a24 4750 5654 472c 2c2c\n2c2c 2c2c 2c2c 4e2a 3330 0a0a 2447 5000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 e835 1640\n1800 0000 00f0 0140 0100 0000 80f8 0940\n0000 0000 0000 0000 0000 0000 1800 0000\ne835 1640 ffff ffff 0100 0000 48fb 0940\n0000 0000 8803 0a40 0000 0000 0000 0000\n0004 0000 dcf9 0940 a9bd 0000 aabd 0000\n0100 0000 0a00 0000 585b 90be e835 1640\n0030 1640 fc6b 0740 0000 0000 0000 0000\n0000 0000 0000 0000 a85a 90be 9c5a 90be\nc8fd ffff fc86 0740 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 90bd 0000 ffff ffff 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 ffff ffff a8bd 0000\n0000 0000 9c5a 90be 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 2000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\na7bd 0000 0000 0000 0000 0000 0000 0000\n6400 0000 0000 0000 1900 0000 0100 0000\n9c5a 90be 0000 0000 545b 90be 9b5a 90be\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 4c0e 0440 1469 690d\n5cd5 0140 0200 0000 58c6 0340 0400 0000\n0000 0000 5095 0040 0000 0000 1856 0240\nd8a7 0140 0300 0000 7859 90be 6c5a 90be\n630d 0305 1cda 0340 0000 0000 0000 0000\n0100 0000 4303 0000 88d5 0140 98d2 0140\n3684 0000 5c5d 0440 5083 0000 0100 0000\nacfd 0340 1469 690d 5cd5 0140 0200 0000\n30c2 0340 0400 0000 0000 0000 5095 0040\n945a 90be 1856 0240 d8a7 0140 1800 0000\ne059 90be d45a 90be 5d59 ab00 1cda 0340\n0000 0000 0000 0000 0100 0000 3902 0000\n88d5 0140 98d2 0140 1584 0000 5c5d 0440\nf082 0000 0100 0000 c056 0240 b82b 6b15\nd45a 90be c85a 90be 7858 0240 0000 0000\n1584 0000 0000 0000 fc5a 90be 6497 0040\nc85a 90be 1c58 0240 0000 0000 88d5 0140\n0100 0000 0000 0000 0100 0000 0000 0000\n0000 0000 5000 0000 9839 ffff 0000 0000\n4c0e 0440 0050 0240 7858 0240 1c5b 90be\nc056 0240 88d5 0140 10de 0140 8083 0000\nc056 0240 0050 0240 0000 0000 70d9 0140\n6043 0100 70dc 0040 88d5 0131 bc5a 90be\n300a 0000 0000 0000 0254 0000 0300 0000\n1861 0840 e835 1640 a886 0000 0401 0000\n0400 0000 bd08 0000 acfd 0340 98d2 0140\n1504 0500 a605 7907 0012 0f17 88d5 0140\n10de 0140 8083 0000 c056 0240 0050 0240\n0000 0000 70d9 0140 4843 0100 70dc 0040\n88d5 0140 0100 0000 0100 0000 0000 0000\n300a 0000 545b 90be 1504 0500 f8bc 0000\n0000 0000 a886 0000 0000 0000 0000 0000\n0000 0000 0050 0240 146b 90be 70f3 0740\n146b 90be 545b 90be 90bd 0000 a887 0000\n",
			"b5",
			"62",
			"b5",
			"05 ",
			"01",
			"b5",
			"05 01",
			"0105",
			"0501",
			"62",
			"b5",
			"u16",
			"init",
			"sum =",
			"ctrl+f",
			"printf(\"\\n",
			"gpgsv",
			"memset",
			"mouth",
			"serial_fd",
			"(\"**---------------------------------------------\\",
			"(\"-----------------------------------------------\\",
			"printGPGSA",
			"switch",
			"cs",
			"k",
			"')",
			"pgprmc",
			"gpprmc",
			"gpgsv",
			"memset",
			"gettime",
			"GPRMC_analysis",
			"memset",
			"checksum",
			"校验",
			"异或",
			"latitude",
			"lati_second",
			"longtitude",
			"latitude",
			"utc",
			"经度",
			"p1+1",
			"data.",
			"GPGSV_analysis",
			"open_serial",
			"pgrmc",
			"NO GP",
			"pos",
			"read_serial",
			"receive_buf",
			"buf",
			"pbuf",
			"rev",
			"flag_close",
			"rev_test",
			"str",
			"count",
			"read_GPS",
			"nosv",
			"data.cs",
			"gpgsv",
			"pgprmc",
			"gpgsv",
			"	//",
			"/n",
			"Ublox_CheckSum",
			"open_serial",
			"NMEA_Str2num",
			"NMEA_Comma_Pos",
			"analysis",
			"usart2_rx_sta",
			"usart2_rx",
			"uart2_rx",
			"msg",
			"gpsx",
			"printf",
			"endif",
			"B9600",
			"init_serial",
			"open_serial",
			"init_serial",
			"open_serial",
			"read_GPS",
			"init_serial",
			"fd",
			"\n	",
			"IXANY",
			"INPCK",
			"B9600",
			"buf4",
			"QWS_DISPLAY",
			"QWS_MOUSE_PROTO",
			"mouse0",
			"mouse",
			"/dev/mouse0",
			"dev/event0"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"home/ming/Project/",
			"printdata",
			"rxd_buf",
			"pgptxt",
			"GPTXT",
			"gptxt_data",
			"GPVTG",
			"gpvtg_data",
			"pgpvtg",
			"pgpgga",
			"pgpgsa",
			"pgpgll",
			"u_int16_t",
			"month",
			"pgpgsa",
			"longitude",
			"long_second",
			"longitude",
			"longtitude",
			"latitude",
			"gpgsv.",
			"gprmc.",
			"gprmc",
			"read_serial",
			"pgpgsv",
			"gpgsv"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "test.c",
					"settings":
					{
						"buffer_size": 2801,
						"regions":
						{
						},
						"selection":
						[
							[
								1399,
								1399
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"origin_encoding": "UTF-8",
							"sublime_auto_complete": true,
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 980.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "gprs.h",
					"settings":
					{
						"buffer_size": 98,
						"regions":
						{
						},
						"selection":
						[
							[
								28,
								28
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"origin_encoding": "ASCII",
							"sublime_auto_complete": true,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "gprs.c",
					"settings":
					{
						"buffer_size": 13463,
						"regions":
						{
						},
						"selection":
						[
							[
								1070,
								1070
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"in_converting": true,
							"origin_encoding": "GB18030",
							"revert_to_scratch": true,
							"sublime_auto_complete": true,
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 569.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Makefile",
					"settings":
					{
						"buffer_size": 252,
						"regions":
						{
						},
						"selection":
						[
							[
								77,
								77
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"origin_encoding": "ASCII",
							"sublime_auto_complete": true,
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 35.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 160.0
	},
	"output.exec":
	{
		"height": 202.0
	},
	"replace":
	{
		"height": 66.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 179.0,
	"status_bar_visible": true
}
